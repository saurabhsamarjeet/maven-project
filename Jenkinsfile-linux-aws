pipeline {
    agent { label 'docker' }
	environment {
        IMAGE = "vishnuhdadhich/hello-world"
        REGISTRY = "https://registry.hub.docker.com"
    }
    stages {
        stage('Build') {
            steps {
                sh 'docker run --rm -v "$PWD":/app -w /app maven mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Pcoverage-per-test'
            }
        }
        stage('Test') {
            steps {
                sh 'docker run --rm -v "$PWD":/app -w /app maven mvn test'
            }
            post {
                always {
                    junit 'server/target/surefire-reports/*.xml'
                }
            }
        }
		stage('SonarQube') {
            steps {
                sh '''				
				docker run --rm -v "$PWD":/app -w /app maven mvn sonar:sonar
				'''
            }
        }
        stage('Docker build') {
            steps {
                sh 'docker build -f Dockerfile -t hello-world:1 .'
            }
        }
		stage('Deliver') {
            steps {
				sh '''
				echo "Stopping the older container if it exists"
				docker stop hello-world || true
				echo "Starting the new container"
				docker run --rm --name hello-world -d -p 80:8080 hello-world:1
				myip="$(dig +short myip.opendns.com @resolver1.opendns.com)"
				echo "Now you can access your web application at the following url in the browser. http://${myip}/webapp"
				'''
            }
        }
    }
	post { 
        always { 
            cleanWs()
			sh 'docker image prune -af'
        }
    }
}